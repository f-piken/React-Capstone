{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\React-Capstone\\\\src\\\\admin\\\\chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport api from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [sender, setSender] = useState('User');\n\n  // Ambil pesan chat dari backend\n  useEffect(() => {\n    const fetchMessages = async () => {\n      const response = await api.get('/get-messages');\n      setMessages(response.data);\n    };\n    fetchMessages();\n    const interval = setInterval(fetchMessages, 3000); // ambil pesan setiap 3 detik\n\n    return () => clearInterval(interval); // bersihkan interval ketika komponen di-unmount\n  }, []);\n\n  // Kirim pesan ke backend\n  const handleSendMessage = async () => {\n    if (newMessage.trim() === '') return;\n    const response = await api.post('/send-message', {\n      message: newMessage,\n      sender: sender\n    });\n    setMessages([...messages, response.data]);\n    setNewMessage('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Chat App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value),\n        placeholder: \"Type a message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Messages:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: messages.map(msg => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [msg.sender, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this), \" \", msg.message]\n        }, msg.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"g2iwUOwbHqDsTwl473Tu8cbX2Eg=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","api","jsxDEV","_jsxDEV","Chat","_s","messages","setMessages","newMessage","setNewMessage","sender","setSender","fetchMessages","response","get","data","interval","setInterval","clearInterval","handleSendMessage","trim","post","message","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","map","msg","id","_c","$RefreshReg$"],"sources":["D:/React/React-Capstone/src/admin/chat.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport api from '../api';\r\n\r\nconst Chat = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState('');\r\n  const [sender, setSender] = useState('User');\r\n\r\n  // Ambil pesan chat dari backend\r\n  useEffect(() => {\r\n    const fetchMessages = async () => {\r\n      const response = await api.get('/get-messages');\r\n      setMessages(response.data);\r\n    };\r\n\r\n    fetchMessages();\r\n    const interval = setInterval(fetchMessages, 3000); // ambil pesan setiap 3 detik\r\n\r\n    return () => clearInterval(interval); // bersihkan interval ketika komponen di-unmount\r\n  }, []);\r\n\r\n  // Kirim pesan ke backend\r\n  const handleSendMessage = async () => {\r\n    if (newMessage.trim() === '') return;\r\n\r\n    const response = await api.post('/send-message', {\r\n      message: newMessage,\r\n      sender: sender,\r\n    });\r\n\r\n    setMessages([...messages, response.data]);\r\n    setNewMessage('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Chat App</h1>\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          value={newMessage}\r\n          onChange={(e) => setNewMessage(e.target.value)}\r\n          placeholder=\"Type a message\"\r\n        />\r\n        <button onClick={handleSendMessage}>Send</button>\r\n      </div>\r\n\r\n      <div>\r\n        <h2>Messages:</h2>\r\n        <ul>\r\n          {messages.map((msg) => (\r\n            <li key={msg.id}>\r\n              <strong>{msg.sender}:</strong> {msg.message}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
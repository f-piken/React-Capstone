{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\React-Capstone\\\\src\\\\chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport api from './api'; // Mengimpor API untuk berkomunikasi dengan backend\nimport Cookies from 'js-cookie';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chat() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [sender, setSender] = useState('Guest');\n\n  // Ambil sesi dari cookie atau localStorage\n  useEffect(() => {\n    const userSession = Cookies.get('user_session'); // Misalnya, menggunakan cookie untuk sesi\n    if (userSession) {\n      setSender(userSession); // Atur pengirim berdasarkan sesi yang ada\n    }\n  }, []);\n\n  // Ambil pesan dari backend\n  useEffect(() => {\n    const fetchMessages = async () => {\n      const response = await api.get('/get-messages');\n      setMessages(response.data.reverse());\n    };\n    fetchMessages();\n    const interval = setInterval(fetchMessages, 1000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // Kirim pesan ke backend\n  const handleSendMessage = async () => {\n    if (newMessage.trim() === '') return;\n    const currentTime = new Date().toLocaleTimeString([], {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n\n    // Menyertakan sesi atau token saat mengirim pesan\n    const response = await api.post('/send-message', {\n      message: newMessage,\n      sender: sender\n    }, {\n      headers: {\n        'Authorization': `Bearer ${Cookies.get('user_session')}` // Menyertakan token sesi di header\n      }\n    });\n    setMessages(prevMessages => [...prevMessages, {\n      ...response.data,\n      time: currentTime\n    }]);\n    setNewMessage('');\n  };\n\n  // Mengatur perubahan input untuk pesan\n  const handleInputChange = e => {\n    setNewMessage(e.target.value);\n  };\n\n  // Menyimpan sesi setelah login (Contoh metode login)\n  const handleLogin = async (username, password) => {\n    const response = await api.post('/login', {\n      username,\n      password\n    });\n    if (response.data.token) {\n      Cookies.set('user_session', response.data.token, {\n        expires: 1\n      }); // Menyimpan token sesi ke cookie\n      setSender(username); // Mengatur pengirim berdasarkan sesi\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-box\",\n        children: messages.reverse().map((message, index) => {\n          const time = new Date(message.created_at).toLocaleTimeString([], {\n            hour: '2-digit',\n            minute: '2-digit'\n          });\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: message.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: time\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Type a message\",\n          value: newMessage,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(Chat, \"dm5emDBE8dS+CeQICntRL8EAo6k=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","api","Cookies","jsxDEV","_jsxDEV","Chat","_s","messages","setMessages","newMessage","setNewMessage","sender","setSender","userSession","get","fetchMessages","response","data","reverse","interval","setInterval","clearInterval","handleSendMessage","trim","currentTime","Date","toLocaleTimeString","hour","minute","post","message","headers","prevMessages","time","handleInputChange","e","target","value","handleLogin","username","password","token","set","expires","className","children","map","index","created_at","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","_c","$RefreshReg$"],"sources":["D:/React/React-Capstone/src/chat.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport api from './api'; // Mengimpor API untuk berkomunikasi dengan backend\r\nimport Cookies from 'js-cookie';\r\n\r\nfunction Chat() {\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState('');\r\n  const [sender, setSender] = useState('Guest');\r\n  \r\n  // Ambil sesi dari cookie atau localStorage\r\n  useEffect(() => {\r\n    const userSession = Cookies.get('user_session'); // Misalnya, menggunakan cookie untuk sesi\r\n    if (userSession) {\r\n      setSender(userSession); // Atur pengirim berdasarkan sesi yang ada\r\n    }\r\n  }, []);\r\n\r\n  // Ambil pesan dari backend\r\n  useEffect(() => {\r\n    const fetchMessages = async () => {\r\n      const response = await api.get('/get-messages');\r\n      setMessages(response.data.reverse());\r\n    };\r\n  \r\n    fetchMessages();\r\n    const interval = setInterval(fetchMessages, 1000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  // Kirim pesan ke backend\r\n  const handleSendMessage = async () => {\r\n    if (newMessage.trim() === '') return;\r\n\r\n    const currentTime = new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n\r\n    // Menyertakan sesi atau token saat mengirim pesan\r\n    const response = await api.post('/send-message', {\r\n      message: newMessage,\r\n      sender: sender,\r\n    }, {\r\n      headers: {\r\n        'Authorization': `Bearer ${Cookies.get('user_session')}`, // Menyertakan token sesi di header\r\n      }\r\n    });\r\n\r\n    setMessages((prevMessages) => [...prevMessages, { ...response.data, time: currentTime }]);\r\n    setNewMessage('');\r\n  };\r\n\r\n  // Mengatur perubahan input untuk pesan\r\n  const handleInputChange = (e) => {\r\n    setNewMessage(e.target.value);\r\n  };\r\n\r\n  // Menyimpan sesi setelah login (Contoh metode login)\r\n  const handleLogin = async (username, password) => {\r\n    const response = await api.post('/login', { username, password });\r\n    \r\n    if (response.data.token) {\r\n      Cookies.set('user_session', response.data.token, { expires: 1 }); // Menyimpan token sesi ke cookie\r\n      setSender(username); // Mengatur pengirim berdasarkan sesi\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"chat-container\">\r\n        {/* Render chat messages */}\r\n        <div className=\"chat-box\">\r\n          {messages.reverse().map((message, index) => {\r\n            const time = new Date(message.created_at).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n            return (\r\n              <div key={index}>\r\n                <div>{message.message}</div>\r\n                <div>{time}</div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n\r\n        <div className=\"chat-input\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Type a message\"\r\n            value={newMessage}\r\n            onChange={handleInputChange}\r\n          />\r\n          <button onClick={handleSendMessage}>Send</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}